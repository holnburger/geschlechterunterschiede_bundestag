wat$score
wat$num_comments
xaringan:::inf_mr()
xaringan:::inf_mr()
install.packages("webshot")
library(webshot)
install_phantomjs()
file_name <- paste0("file://", normalizePath("my_xaringan.html"))
file_name <- paste0("file://", normalizePath("index.html"))
webshot(file_name, "mypdf.pdf")
webshot(file_name, "mypdf.pdf")
library(RSelenium)
install.packages("lubridate")
install.packages("lubridate")
install.packages("stm")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
library(tidyverse)
bt_data <- read_rds("data/mdb_data.RDS")
bt_data <- read_rds("data/mdb_data.RDS")
bt_overview <- read_rds("data/BT_19/overview.RDS")
bt_overview <- read_rds("data/BT_19/overview.RDS")
bt_speeches <- read_rds("data/BT_19/speeches.RDS")
bt_comments_overview
bt_comments_overview %>% hist(.)
hist(bt_comments_overview$neg_kommentare)
library(MASS)
library(tidyverse)
library(stargazer)
bt_overview <- read_rds("data/BT_19/overview.RDS")
bt_data <- read_rds("data/mdb_data.RDS")
bt_speeches <- read_rds("data/BT_19/speeches.RDS")
fraktionsvorsitz <- read_rds("data/BT_19/fraktionsvorsitzende.RDS")
corr_traeger <- bt_data %>%
filter(id == "11004426") %>%
mutate(id = "999190001")
corr_voellers <- bt_data %>%
filter(id == "11004942") %>%
mutate(id = "10000")
bt_data <- bt_data %>%
bind_rows(corr_traeger) %>%
bind_rows(corr_voellers)
parteien <- c("SPD", "DIE LINKE", "FDP", "CDU/CSU", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
parteien_in_comments <- "\\[SPD\\]|\\[DIE LINKE\\]|\\[FDP\\]|\\[CDU/CSU\\]|\\[AfD\\]|\\[BÜNDNIS 90/DIE GRÜNEN\\]"
oppositions_parteien <- c("DIE LINKE", "FDP", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
links_parteien <- c("DIE LINKE", "BÜNDNIS 90/DIE GRÜNEN", "SPD")
negativ_comments <- c("Zuruf", "Lachen", "Zwischenruf", "Gegenruf")
bt_comments <- bt_speeches %>%
left_join(bt_overview %>% select(rede_id, redner_rolle),
by = "rede_id") %>%                          # Nur die Reden von MdBs
filter(is.na(redner_rolle)) %>%
filter(typ == "kommentar") %>%                         # Nur die Kommentare
separate_rows(rede, sep = "–") %>%                     # Kommentare bei Bindestrich in die nächst Datenreihe
mutate(rede = str_remove_all(rede, "^\\s+|\\s+$")) %>% # Entfernt Leerzeichen vor und nach dem String
mutate(rede = str_remove_all(rede, "^\\(|\\)$")) %>%   # Entfernt Klammern vor und nach dem String
filter(fraktion %in% parteien) %>%                     # Nur die Fraktionen, keine fraktionslosen Abgeordneten
filter(präsidium != TRUE) %>%                          # Keine Kommentare des Präsidiums
mutate(neg_kommentar = case_when(                      # Erkennt Zwischenrufe und negative Unterbrechungen
str_detect(rede, parteien_in_comments) ~ TRUE,
str_detect(rede, paste(negativ_comments, collapse = "|")) ~ TRUE,
TRUE ~ FALSE))
library(MASS)
library(tidyverse)
library(stargazer)
bt_overview <- read_rds("data/BT_19/overview.RDS")
bt_data <- read_rds("data/mdb_data.RDS")
bt_speeches <- read_rds("data/BT_19/speeches.RDS")
fraktionsvorsitz <- read_rds("data/BT_19/fraktionsvorsitzende.RDS")
corr_traeger <- bt_data %>%
filter(id == "11004426") %>%
mutate(id = "999190001")
corr_voellers <- bt_data %>%
filter(id == "11004942") %>%
mutate(id = "10000")
bt_data <- bt_data %>%
bind_rows(corr_traeger) %>%
bind_rows(corr_voellers)
parteien <- c("SPD", "DIE LINKE", "FDP", "CDU/CSU", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
parteien_in_comments <- "\\[SPD\\]|\\[DIE LINKE\\]|\\[FDP\\]|\\[CDU/CSU\\]|\\[AfD\\]|\\[BÜNDNIS 90/DIE GRÜNEN\\]"
oppositions_parteien <- c("DIE LINKE", "FDP", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
links_parteien <- c("DIE LINKE", "BÜNDNIS 90/DIE GRÜNEN", "SPD")
negativ_comments <- c("Zuruf", "Lachen", "Zwischenruf", "Gegenruf")
bt_comments <- bt_speeches %>%
left_join(bt_overview %>% select(rede_id, redner_rolle),
by = "rede_id") %>%                          # Nur die Reden von MdBs
filter(is.na(redner_rolle)) %>%
filter(typ == "kommentar") %>%                         # Nur die Kommentare
separate_rows(rede, sep = "–") %>%                     # Kommentare bei Bindestrich in die nächst Datenreihe
mutate(rede = str_remove_all(rede, "^\\s+|\\s+$")) %>% # Entfernt Leerzeichen vor und nach dem String
mutate(rede = str_remove_all(rede, "^\\(|\\)$")) %>%   # Entfernt Klammern vor und nach dem String
filter(fraktion %in% parteien) %>%                     # Nur die Fraktionen, keine fraktionslosen Abgeordneten
filter(präsidium != TRUE) %>%                          # Keine Kommentare des Präsidiums
mutate(neg_kommentar = case_when(                      # Erkennt Zwischenrufe und negative Unterbrechungen
str_detect(rede, parteien_in_comments) ~ TRUE,
str_detect(rede, paste(negativ_comments, collapse = "|")) ~ TRUE,
TRUE ~ FALSE))
bt_overview
bt_comments <- bt_speeches %>%
left_join(bt_overview %>% select(rede_id, redner_rolle),
by = "rede_id")
bt_overview %>% select(rede_id, redner_rolle
)
library(MASS)
library(tidyverse)
library(stargazer)
bt_overview <- read_rds("data/BT_19/overview.RDS")
bt_data <- read_rds("data/mdb_data.RDS")
bt_speeches <- read_rds("data/BT_19/speeches.RDS")
fraktionsvorsitz <- read_rds("data/BT_19/fraktionsvorsitzende.RDS")
corr_traeger <- bt_data %>%
filter(id == "11004426") %>%
mutate(id = "999190001")
corr_voellers <- bt_data %>%
filter(id == "11004942") %>%
mutate(id = "10000")
bt_data <- bt_data %>%
bind_rows(corr_traeger) %>%
bind_rows(corr_voellers)
parteien <- c("SPD", "DIE LINKE", "FDP", "CDU/CSU", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
parteien_in_comments <- "\\[SPD\\]|\\[DIE LINKE\\]|\\[FDP\\]|\\[CDU/CSU\\]|\\[AfD\\]|\\[BÜNDNIS 90/DIE GRÜNEN\\]"
oppositions_parteien <- c("DIE LINKE", "FDP", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
links_parteien <- c("DIE LINKE", "BÜNDNIS 90/DIE GRÜNEN", "SPD")
negativ_comments <- c("Zuruf", "Lachen", "Zwischenruf", "Gegenruf")
bt_comments <- bt_speeches %>%
left_join(bt_overview %>% select(rede_id, redner_rolle),
by = "rede_id") %>%                          # Nur die Reden von MdBs
filter(is.na(redner_rolle)) %>%
filter(typ == "kommentar") %>%                         # Nur die Kommentare
separate_rows(rede, sep = "–") %>%                     # Kommentare bei Bindestrich in die nächst Datenreihe
mutate(rede = str_remove_all(rede, "^\\s+|\\s+$")) %>% # Entfernt Leerzeichen vor und nach dem String
mutate(rede = str_remove_all(rede, "^\\(|\\)$")) %>%   # Entfernt Klammern vor und nach dem String
filter(fraktion %in% parteien) %>%                     # Nur die Fraktionen, keine fraktionslosen Abgeordneten
filter(präsidium != TRUE) %>%                          # Keine Kommentare des Präsidiums
mutate(neg_kommentar = case_when(                      # Erkennt Zwischenrufe und negative Unterbrechungen
str_detect(rede, parteien_in_comments) ~ TRUE,
str_detect(rede, paste(negativ_comments, collapse = "|")) ~ TRUE,
TRUE ~ FALSE))
bt_comments_overview <- bt_comments %>%
filter(neg_kommentar == TRUE) %>%                      # Nur negative Kommentare, keine positiven
group_by(rede_id) %>%                                  # Gruppieren nach Rede
summarise(neg_kommentare = n()) %>%                    # Anzahl der negativen Kommentare
left_join(bt_overview, by = "rede_id") %>%             # Mit weiteren Angaben (Geschlecht, Partei, etc.) kombinieren
left_join(bt_data, by = c("redner_id" = "id")) %>%
mutate(name = paste0(redner_vorname, " ", redner_nachname, ", ", redner_fraktion)) %>% # Lesbare Angaben über Abgeordnete
select(rede_id, redner_id, name, redner_fraktion,
neg_kommentare, geburtsjahr, partei,
geschlecht, anzahl_wahlperioden) %>%
mutate(gender = ifelse(geschlecht == "männlich", 1, 0)) %>%                       # Dummy-Variable Geschlecht
mutate(opposition = ifelse(redner_fraktion %in% oppositions_parteien, 1, 0)) %>%  # Dummy-Varibale Opposition
mutate(rechts = ifelse(redner_fraktion %in% links_parteien, 0, 1)) %>%            # Dummy-Variable rechts
mutate(is_afd = ifelse(redner_fraktion == "AfD", 1, 0)) %>%                       # Dummy-Variable AfD
mutate(alter = 2018 - geburtsjahr) %>%                                            # Angabe Alter
select(-geburtsjahr, -geschlecht) %>%
mutate(vorsitz = ifelse(str_detect(paste(fraktionsvorsitz$name, collapse = "|"), name), 1, 0))  # Dummy-Variable Fraktionsvorsitz
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare))
hist(bt_comments_overview$neg_kommentare, main = "Histogram: Unterbrechungen während \n Bundestagsreden",
xlab = "Unterbrechungen")
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) -> wat
stargazer(wat)
stargazer(wat, type = "text")
wat
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable()
install.packages("kableExtra")
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable() %>%
kableExtra::kable_as_image(., "results/unterbrechung_stats.png", file_format = "png")
install.packages("magick")
install.packages("magick")
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable() %>%
kableExtra::kable_as_image(., "results/unterbrechung_stats.png", file_format = "png")
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable() %>%
kableExtra::kable_as_image(., "results/unterbrechung_stats.png", file_format = "png")
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable(format = "latex") %>%
kableExtra::kable_as_image(., "results/unterbrechung_stats.png", file_format = "png")
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable(format = "latex", booktabs = TRUE) %>%
kableExtra::kable_as_image(., "results/unterbrechung_stats.png", file_format = "png")
xaringan:::inf_mr()
library(tidyverse)
library(tidyverse)
bt_data <- read_rds("data/mdb_data.RDS")
bt_overview <- read_rds("data/BT_19/overview.RDS")
bt_speeches <- read_rds("data/BT_19/speeches.RDS")
stm_search_k <- read_rds("data/stm/test_k.RDS")
xaringan:::inf_mr()
xaringan:::inf_mr()
file_name <- paste0("file://", normalizePath("index.html"))
webshot(file_name, "presentation.pdf")
library(webshot)
webshot(file_name, "presentation.pdf")
library(MASS)
library(tidyverse)
library(stargazer)
bt_overview <- read_rds("data/BT_19/overview.RDS")
bt_data <- read_rds("data/mdb_data.RDS")
bt_speeches <- read_rds("data/BT_19/speeches.RDS")
fraktionsvorsitz <- read_rds("data/BT_19/fraktionsvorsitzende.RDS")
corr_traeger <- bt_data %>%
filter(id == "11004426") %>%
mutate(id = "999190001")
corr_voellers <- bt_data %>%
filter(id == "11004942") %>%
mutate(id = "10000")
bt_data <- bt_data %>%
bind_rows(corr_traeger) %>%
bind_rows(corr_voellers)
parteien <- c("SPD", "DIE LINKE", "FDP", "CDU/CSU", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
parteien_in_comments <- "\\[SPD\\]|\\[DIE LINKE\\]|\\[FDP\\]|\\[CDU/CSU\\]|\\[AfD\\]|\\[BÜNDNIS 90/DIE GRÜNEN\\]"
oppositions_parteien <- c("DIE LINKE", "FDP", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
links_parteien <- c("DIE LINKE", "BÜNDNIS 90/DIE GRÜNEN", "SPD")
negativ_comments <- c("Zuruf", "Lachen", "Zwischenruf", "Gegenruf")
bt_comments <- bt_speeches %>%
left_join(bt_overview %>% select(rede_id, redner_rolle),
by = "rede_id") %>%                          # Nur die Reden von MdBs
filter(is.na(redner_rolle)) %>%
filter(typ == "kommentar") %>%                         # Nur die Kommentare
separate_rows(rede, sep = "–") %>%                     # Kommentare bei Bindestrich in die nächst Datenreihe
mutate(rede = str_remove_all(rede, "^\\s+|\\s+$")) %>% # Entfernt Leerzeichen vor und nach dem String
mutate(rede = str_remove_all(rede, "^\\(|\\)$")) %>%   # Entfernt Klammern vor und nach dem String
filter(fraktion %in% parteien) %>%                     # Nur die Fraktionen, keine fraktionslosen Abgeordneten
filter(präsidium != TRUE) %>%                          # Keine Kommentare des Präsidiums
mutate(neg_kommentar = case_when(                      # Erkennt Zwischenrufe und negative Unterbrechungen
str_detect(rede, parteien_in_comments) ~ TRUE,
str_detect(rede, paste(negativ_comments, collapse = "|")) ~ TRUE,
TRUE ~ FALSE))
bt_comments <- bt_speeches %>%
left_join(bt_overview %>% select(rede_id, redner_rolle),
by = "rede_id") %>%                          # Nur die Reden von MdBs
filter(is.na(redner_rolle)) %>%
filter(typ == "kommentar") %>%                         # Nur die Kommentare
separate_rows(rede, sep = "–") %>%                     # Kommentare bei Bindestrich in die nächst Datenreihe
mutate(rede = str_remove_all(rede, "^\\s+|\\s+$")) %>% # Entfernt Leerzeichen vor und nach dem String
mutate(rede = str_remove_all(rede, "^\\(|\\)$")) %>%   # Entfernt Klammern vor und nach dem String
filter(fraktion %in% parteien) %>%                     # Nur die Fraktionen, keine fraktionslosen Abgeordneten
filter(präsidium != TRUE) %>%                          # Keine Kommentare des Präsidiums
mutate(neg_kommentar = case_when(                      # Erkennt Zwischenrufe und negative Unterbrechungen
str_detect(rede, parteien_in_comments) ~ TRUE,
str_detect(rede, paste(negativ_comments, collapse = "|")) ~ TRUE,
TRUE ~ FALSE))
library(MASS)
library(tidyverse)
library(stargazer)
bt_overview <- read_rds("data/BT_19/overview.RDS")
bt_data <- read_rds("data/mdb_data.RDS")
bt_speeches <- read_rds("data/BT_19/speeches.RDS")
fraktionsvorsitz <- read_rds("data/BT_19/fraktionsvorsitzende.RDS")
corr_traeger <- bt_data %>%
filter(id == "11004426") %>%
mutate(id = "999190001")
corr_voellers <- bt_data %>%
filter(id == "11004942") %>%
mutate(id = "10000")
bt_data <- bt_data %>%
bind_rows(corr_traeger) %>%
bind_rows(corr_voellers)
parteien <- c("SPD", "DIE LINKE", "FDP", "CDU/CSU", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
parteien_in_comments <- "\\[SPD\\]|\\[DIE LINKE\\]|\\[FDP\\]|\\[CDU/CSU\\]|\\[AfD\\]|\\[BÜNDNIS 90/DIE GRÜNEN\\]"
oppositions_parteien <- c("DIE LINKE", "FDP", "AfD", "BÜNDNIS 90/DIE GRÜNEN")
links_parteien <- c("DIE LINKE", "BÜNDNIS 90/DIE GRÜNEN", "SPD")
negativ_comments <- c("Zuruf", "Lachen", "Zwischenruf", "Gegenruf")
bt_comments <- bt_speeches %>%
left_join(bt_overview %>% select(rede_id, redner_rolle),
by = "rede_id") %>%                          # Nur die Reden von MdBs
filter(is.na(redner_rolle)) %>%
filter(typ == "kommentar") %>%                         # Nur die Kommentare
separate_rows(rede, sep = "–") %>%                     # Kommentare bei Bindestrich in die nächst Datenreihe
mutate(rede = str_remove_all(rede, "^\\s+|\\s+$")) %>% # Entfernt Leerzeichen vor und nach dem String
mutate(rede = str_remove_all(rede, "^\\(|\\)$")) %>%   # Entfernt Klammern vor und nach dem String
filter(fraktion %in% parteien) %>%                     # Nur die Fraktionen, keine fraktionslosen Abgeordneten
filter(präsidium != TRUE) %>%                          # Keine Kommentare des Präsidiums
mutate(neg_kommentar = case_when(                      # Erkennt Zwischenrufe und negative Unterbrechungen
str_detect(rede, parteien_in_comments) ~ TRUE,
str_detect(rede, paste(negativ_comments, collapse = "|")) ~ TRUE,
TRUE ~ FALSE))
bt_comments_overview <- bt_comments %>%
filter(neg_kommentar == TRUE) %>%                      # Nur negative Kommentare, keine positiven
group_by(rede_id) %>%                                  # Gruppieren nach Rede
summarise(neg_kommentare = n()) %>%                    # Anzahl der negativen Kommentare
left_join(bt_overview, by = "rede_id") %>%             # Mit weiteren Angaben (Geschlecht, Partei, etc.) kombinieren
left_join(bt_data, by = c("redner_id" = "id")) %>%
mutate(name = paste0(redner_vorname, " ", redner_nachname, ", ", redner_fraktion)) %>% # Lesbare Angaben über Abgeordnete
select(rede_id, redner_id, name, redner_fraktion,
neg_kommentare, geburtsjahr, partei,
geschlecht, anzahl_wahlperioden) %>%
mutate(gender = ifelse(geschlecht == "männlich", 1, 0)) %>%                       # Dummy-Variable Geschlecht
mutate(opposition = ifelse(redner_fraktion %in% oppositions_parteien, 1, 0)) %>%  # Dummy-Varibale Opposition
mutate(rechts = ifelse(redner_fraktion %in% links_parteien, 0, 1)) %>%            # Dummy-Variable rechts
mutate(is_afd = ifelse(redner_fraktion == "AfD", 1, 0)) %>%                       # Dummy-Variable AfD
mutate(alter = 2018 - geburtsjahr) %>%                                            # Angabe Alter
select(-geburtsjahr, -geschlecht) %>%
mutate(vorsitz = ifelse(str_detect(paste(fraktionsvorsitz$name, collapse = "|"), name), 1, 0))  # Dummy-Variable Fraktionsvorsitz
View(bt_comments_overview)
bt_speeches %>% filter(rede_id == "ID191003300")
bt_comments_overview <- bt_comments %>%
filter(neg_kommentar == TRUE) %>%                      # Nur negative Kommentare, keine positiven
group_by(rede_id) %>%                                  # Gruppieren nach Rede
summarise(neg_kommentare = n()) %>%                    # Anzahl der negativen Kommentare
right_join(bt_overview, by = "rede_id") %>%             # Mit weiteren Angaben (Geschlecht, Partei, etc.) kombinieren
left_join(bt_data, by = c("redner_id" = "id")) %>%
mutate(name = paste0(redner_vorname, " ", redner_nachname, ", ", redner_fraktion)) %>% # Lesbare Angaben über Abgeordnete
select(rede_id, redner_id, name, redner_fraktion,
neg_kommentare, geburtsjahr, partei,
geschlecht, anzahl_wahlperioden) %>%
mutate(gender = ifelse(geschlecht == "männlich", 1, 0)) %>%                       # Dummy-Variable Geschlecht
mutate(opposition = ifelse(redner_fraktion %in% oppositions_parteien, 1, 0)) %>%  # Dummy-Varibale Opposition
mutate(rechts = ifelse(redner_fraktion %in% links_parteien, 0, 1)) %>%            # Dummy-Variable rechts
mutate(is_afd = ifelse(redner_fraktion == "AfD", 1, 0)) %>%                       # Dummy-Variable AfD
mutate(alter = 2018 - geburtsjahr) %>%                                            # Angabe Alter
select(-geburtsjahr, -geschlecht) %>%
mutate(vorsitz = ifelse(str_detect(paste(fraktionsvorsitz$name, collapse = "|"), name), 1, 0))  # Dummy-Variable Fraktionsvorsitz
View(bt_comments_overview)
bt_comments_overview <- bt_comments %>%
filter(neg_kommentar == TRUE) %>%                      # Nur negative Kommentare, keine positiven
group_by(rede_id) %>%                                  # Gruppieren nach Rede
summarise(neg_kommentare = n()) %>%                    # Anzahl der negativen Kommentare
right_join(bt_overview %>%
filter(is.na(redner_rolle)),
by = "rede_id") %>%                         # Mit weiteren Angaben (Geschlecht, Partei, etc.) kombinieren
left_join(bt_data, by = c("redner_id" = "id")) %>%
mutate(name = paste0(redner_vorname, " ", redner_nachname, ", ", redner_fraktion)) %>% # Lesbare Angaben über Abgeordnete
select(rede_id, redner_id, name, redner_fraktion,
neg_kommentare, geburtsjahr, partei,
geschlecht, anzahl_wahlperioden) %>%
mutate(gender = ifelse(geschlecht == "männlich", 1, 0)) %>%                       # Dummy-Variable Geschlecht
mutate(opposition = ifelse(redner_fraktion %in% oppositions_parteien, 1, 0)) %>%  # Dummy-Varibale Opposition
mutate(rechts = ifelse(redner_fraktion %in% links_parteien, 0, 1)) %>%            # Dummy-Variable rechts
mutate(is_afd = ifelse(redner_fraktion == "AfD", 1, 0)) %>%                       # Dummy-Variable AfD
mutate(alter = 2018 - geburtsjahr) %>%                                            # Angabe Alter
select(-geburtsjahr, -geschlecht) %>%
mutate(vorsitz = ifelse(str_detect(paste(fraktionsvorsitz$name, collapse = "|"), name), 1, 0))  # Dummy-Variable Fraktionsvorsitz
bt_speeches %>% filter(rede_id == "ID196821200")
bt_comments_overview
bt_comments_overview <- bt_comments %>%
filter(neg_kommentar == TRUE) %>%                      # Nur negative Kommentare, keine positiven
group_by(rede_id) %>%                                  # Gruppieren nach Rede
summarise(neg_kommentare = n()) %>%                    # Anzahl der negativen Kommentare
right_join(bt_overview %>%
filter(is.na(redner_rolle)),
by = "rede_id") %>%                         # Mit weiteren Angaben (Geschlecht, Partei, etc.) kombinieren
left_join(bt_data, by = c("redner_id" = "id")) %>%
mutate(name = paste0(redner_vorname, " ", redner_nachname, ", ", redner_fraktion)) %>% # Lesbare Angaben über Abgeordnete
select(rede_id, redner_id, name, redner_fraktion,
neg_kommentare, geburtsjahr, partei,
geschlecht, anzahl_wahlperioden) %>%
mutate(neg_kommentare = replace_na(neg_kommentare, 0)) %>%                        # Werte ohne neg Unterbrechung als 0
mutate(gender = ifelse(geschlecht == "männlich", 1, 0)) %>%                       # Dummy-Variable Geschlecht
mutate(opposition = ifelse(redner_fraktion %in% oppositions_parteien, 1, 0)) %>%  # Dummy-Varibale Opposition
mutate(rechts = ifelse(redner_fraktion %in% links_parteien, 0, 1)) %>%            # Dummy-Variable rechts
mutate(is_afd = ifelse(redner_fraktion == "AfD", 1, 0)) %>%                       # Dummy-Variable AfD
mutate(alter = 2018 - geburtsjahr) %>%                                            # Angabe Alter
select(-geburtsjahr, -geschlecht) %>%
mutate(vorsitz = ifelse(str_detect(paste(fraktionsvorsitz$name, collapse = "|"), name), 1, 0))  # Dummy-Variable Fraktionsvorsitz
write_rds(bt_comments_overview, "data/BT_19/comments_overview.RDS")
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable(format = "latex", booktabs = TRUE) %>%
kableExtra::kable_as_image(., "results/unterbrechung_stats.png", file_format = "png")
hist(bt_comments_overview$neg_kommentare, main = "Histogram: Unterbrechungen während \n Bundestagsreden",
xlab = "Unterbrechungen")
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable(format = "latex", booktabs = TRUE) %>%
kableExtra::kable_as_image(., "results/unterbrechung_stats", file_format = "png")
hist(bt_comments_overview$neg_kommentare, main = "Histogram: Unterbrechungen während \n Bundestagsreden",
xlab = "Unterbrechungen")
bt_comments_overview %>% select(gender, neg_kommentare) %>% split(.$gender) %>% map(summary)
m1 <- lm(neg_kommentare ~ gender, data = bt_comments_overview)
m2 <- lm(neg_kommentare ~ gender + opposition, data = bt_comments_overview)
m3 <- lm(neg_kommentare ~ gender + opposition + rechts, data = bt_comments_overview)
m4 <- lm(neg_kommentare ~ gender + opposition + rechts + is_afd, data = bt_comments_overview)
m5 <- lm(neg_kommentare ~ gender + alter, data = bt_comments_overview)
m6 <- lm(neg_kommentare ~ gender + anzahl_wahlperioden, data = bt_comments_overview)
m7 <- lm(neg_kommentare ~ gender + vorsitz, data = bt_comments_overview)
stargazer(m1, m2, m3, m4, m5, m6, m7, type = "html", omit.stat=c("LL","ser","f"), no.space=TRUE,
title = "Lineare Regression", dep.var.caption = "Abhängige Variable",
dep.var.labels = c("Unterbrechungen in Reden"),
covariate.labels = c("Geschlecht", "Opposition", "Rechts", "AfD", "Alter", "Anzahl Mandate im BT", "Fraktionsvorsitz"),
out = "results/lm_unterbrechungen.html")
m1 <- glm.nb(neg_kommentare ~ gender, data = bt_comments_overview)
m2 <- glm.nb(neg_kommentare ~ gender + opposition, data = bt_comments_overview)
m3 <- glm.nb(neg_kommentare ~ gender + opposition + rechts, data = bt_comments_overview)
m4 <- glm.nb(neg_kommentare ~ gender + opposition + rechts + is_afd, data = bt_comments_overview)
m5 <- glm.nb(neg_kommentare ~ gender + alter, data = bt_comments_overview)
m6 <- glm.nb(neg_kommentare ~ gender + anzahl_wahlperioden, data = bt_comments_overview)
m7 <- glm.nb(neg_kommentare ~ gender + vorsitz, data = bt_comments_overview)
stargazer(m1, m2, m3, m4, m5, m6, m7, type = "text", omit.stat=c("LL","ser","f"), no.space=TRUE,
title = "Negative Binominalregression", dep.var.caption = "Abhängige Variable",
dep.var.labels = c("Unterbrechungen in Reden"),
covariate.labels = c("Geschlecht", "Opposition", "Rechts", "AfD", "Alter", "Anzahl Mandate im BT", "Fraktionsvorsitz"),
out = "results/glm_nb_unterbrechungen.html")
stargazer(m1, m2, m3, m4, m5, m6, m7, type = "html", omit.stat=c("LL","ser","f"), no.space=TRUE,
title = "Negative Binominalregression", dep.var.caption = "Abhängige Variable",
dep.var.labels = c("Unterbrechungen in Reden"),
covariate.labels = c("Geschlecht", "Opposition", "Rechts", "AfD", "Alter", "Anzahl Mandate im BT", "Fraktionsvorsitz"),
out = "results/glm_nb_unterbrechungen.html")
bt_zwischenfragen <- bt_speeches %>%     # Schlägt an, wenn das Präsidium fragen zu Zwischenfrage stellt.
mutate(anfrage_zwischenfrage =
ifelse(präsidium == TRUE & str_detect(rede, "Zwischenfrage"), 1, 0)) %>%
group_by(rede_id) %>%
summarise(anzahl_anfrage_zwischenfrage =
sum(anfrage_zwischenfrage)) %>%
arrange(-anzahl_anfrage_zwischenfrage) %>%
left_join(bt_overview, by = "rede_id") %>%      # Ergänzung um weitere Informationen
mutate(name = paste0(redner_vorname, " ", redner_nachname, ", ", redner_fraktion)) %>%
filter(is.na(redner_rolle)) %>%                 # nur Reden von MdBs
left_join(bt_data, by = c("redner_id" = "id")) %>%
mutate(gender = ifelse(geschlecht == "männlich", 1, 0)) %>%
mutate(alter = 2018 - geburtsjahr) %>%
select(rede_id, anzahl_anfrage_zwischenfrage, redner_id, name, redner_fraktion, gender, alter, anzahl_wahlperioden) %>%
mutate(vorsitz = ifelse(str_detect(paste(fraktionsvorsitz$name, collapse = "|"), name), 1, 0)) %>%
mutate(opposition = ifelse(redner_fraktion %in% oppositions_parteien, 1, 0)) %>%
mutate(rechts = ifelse(redner_fraktion %in% links_parteien, 0, 1)) %>%
mutate(is_afd = ifelse(redner_fraktion == "AfD", 1, 0)) %>%
na.omit(gender)
bt_comments_overview %>%
mutate(Geschlecht = ifelse(gender == 0, "weiblich", "männlich")) %>%
group_by(Geschlecht) %>%
summarise(min = min(neg_kommentare),
max = max(neg_kommentare),
mean = mean(neg_kommentare),
sd = sd(neg_kommentare),
n = n(),
var = var(neg_kommentare)) %>%
knitr::kable(format = "latex", booktabs = TRUE) %>%
kableExtra::kable_as_image(., "results/unterbrechung_stats", file_format = "png")
xaringan:::inf_mr()
library(webshot)
file_name <- paste0("file://", normalizePath("index.html"))
webshot(file_name, "presentation.pdf")
